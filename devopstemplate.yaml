apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: devopstemplate
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: allianzdemo
    name: webserver30-tomcat8-openshift
  spec:
    dockerImageRepository: registry.access.redhat.com/jboss-webserver-3/webserver30-tomcat8-openshift
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: allianzdemo
    name: allianzdemo
  spec: {}
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: allianzdemo
    name: allianzdemo
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: allianzdemo:latest
    resources: {}
    source:
      git:
        uri: https://bitbucket.org/atosconsulting/allianzdemo
      sourceSecret:
        name: basicsecret
      type: Git
    strategy:
      dockerStrategy:
        noCache: true
        from:
          kind: ImageStreamTag
          name: webserver30-tomcat8-openshift:latest
      type: Docker
    triggers:
    - github:
        secret: SsM258HEQF0QFr0qFOMD
      type: GitHub
    - generic:
        secret: mP26mEf8duMC1uT12ytD
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: allianzdemo
    name: allianzdemo
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: allianzdemo
      deploymentconfig: allianzdemo
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: allianzdemo
    name: allianzdemo
  spec:
    replicas: 1
    selector:
      app: allianzdemo
      deploymentconfig: allianzdemo
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: allianzdemo
          deploymentconfig: allianzdemo
      spec:
        containers:
        - image: devops/allianzdemo
          imagePullPolicy: Always
          name: allianzdemo
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - allianzdemo
        from:
          kind: ImageStreamTag
          name: allianzdemo:latest
      type: ImageChange
  status: {}
